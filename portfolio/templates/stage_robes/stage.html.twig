{% extends 'base.html.twig' %}

{% block title %}Robespierre Lens{% endblock %}

{% block body %}

 
<section class="py-4 py-xl-5">

        <div class="border rounded border-0 d-flex flex-column justify-content-center align-items-center p-4 py-5" style="background: linear-gradient(rgba(0,123,255,0.2), rgba(0,123,255,0.2)), url('/assets/robes.jpeg') center / cover;height: 500px;">
            <div class="row">
                <div class="col-md-10 col-xl-8 text-center d-flex d-sm-flex d-md-flex justify-content-center align-items-center mx-auto justify-content-md-start align-items-md-center justify-content-xl-center">
                    <div>
                        <h1 class="text-uppercase fw-bold mb-3">Stage Lycée maximilien de robespierre</h1>
                    </div>
                </div>
            </div>
        </div>
   
</section>


<div class="container">
    <div class="row">
        <div class="col-md-12 rounded border p-3"> <h4 style="text-align : center;">Contexte</h4>
        <p>Lors de ma première année de BTS j'ai efféctuer mon stage au lycée Robespierre de Lens.
        Mon tuteur été mon ancien professeur de réseaux monsieur Ludovic Lecocq.
        Sa demande été de refaire entièrement la visite virtuelle du lycée qui devenait beaucoup trop ancienne et de moins en moins fonctionnelle.
        Il venait égallement de recevoir 2 oculus quest 2 et il voulait égallement si j'en avais le temp lui adapter ma nouvelle visite sur son oculus. Ce que j'ai réussi!</p>
        </div>
    </div>
    <br>
    <div class="row">
       
        
        <div class="col-md-3 rounded border p-3"><h4>Cahier des charges</h4>
        <p>Forcément un project informatique demande un cahier des charges!
        Monsieur Lecocq m'a donner ce qu'il voulait, c'est contraite.
        <ul>
            <li>Etre disponible sur le web</li>
            <li>Etre responsive (utilisable sur mobile)</li>
            <li>Etre optimiser pour charger très vite (une contraite qui ma plusieurs fois poser problème)</li>
            <li>Etre très simple d'utilisation</li>
            <li>Avoir toute les salles dans la visite (ce qui n'était pas le cas dans l'ancienne).</li>
            <li>Il voulait égallement des vidéos intégrer dans la visite virtuelle</li>
        </ul>
        <a href="https://drive.google.com/file/d/1Y8PL2EXkpXS0iZyBWsIEYXjAcG_S2Y-y/view?usp=sharing" target="_blank">Télécharger le code source de la visite Web</a><br><br>
          <a href="https://drive.google.com/file/d/1AWOI1yIrKOA6pbDoV2psvcfELKSz9Isb/view?usp=sharing" target="_blank">Télécharger le code source de la visite Oculus</a>
        </div>
        
        <div class="col-md-8 rounded border p-3" style="margin-left:5%"><h4>Comment Faire?</h4>
            <p>Après avoir eu un cahier des charges plutôt précis il me fallait savoir comment j'allais réaliser la visite virtuelle.
            Pour celà j'ai dabord commencer par faire de la veille sur les différentes façons de faire celà.</p>

            <p>J'ai trouvé une vidéos qui ma permis de m'orienter sur quel technologies j'allais choisir.</p>
            </p>
            <div class="embed-responsive embed-responsive-16by9">
                <iframe width="560" height="315" src="https://www.youtube.com/embed/i13G4v6NtGg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
            </div>
            <p>Après m'être bien renseigner sur le moteur Unity j'ai décider de choisir cette technologie, car elle correspondait totalement à la demande</p>
            <p>Unity est un moteur de jeux qui me permet une grande élasticiter sur les platforms qu'il supporte, sur ce que l'on peux faire avec ext...</p>
            <p>Unity m'offre ici la technologies qu'il me fallait WEBGL <img src="{{ asset('/assets/webGL.png') }}" width="40%" height="40%"> </p>

            <p>Grâce à WebGL, les développeurs peuvent créer des jeux, des visualisations de données, des animations et des applications interactives avec des graphismes 3D
            complexes qui <strong>fonctionnent directement dans le navigateur, sans nécessiter de téléchargement ou d'installation supplémentaire</strong>. Cela rend l'expérience utilisateur 
            plus <strong>fluide</strong> et plus <strong>rapide</strong>, <strong>sans compromettre la qualité visuelle</strong>.</p>

            <p>Maintenant que je suis rassurer sur les technologies à utiliser il faut maintenant installer tout ce que l'on aura besoin.</p>
            <p>J'ai donc installer le moteur de jeux   <a href="https://store.unity.com/download" target="_blank">Unity</a>
        
            <p>Pour la visite virtuelle web j'ai utiliser la version 2022.2.0a17 c'était à l'époque une version Alpha mais avait une mise à jour importante sur les performances de WebGL
            ce que n'avais pas la version stable que j'avais à la base utiliser et ou je me suis rendu compte des problèmes de performance est de compatibilité la version que j'avais utiliser
            ne fonctionner pas sur safari par exemple. Alors que celle si oui!</p>
            
            <img src="{{ asset('/assets/unityVerWeb.png') }}" width="800px" height="450px">
            
            <p>Maintenant que j'ai un moteur utilisable j'étais presque prêt.</p>

            <h3>1ère étape le contenu</h3>
            <p>Dans se projet j'étais seule à tout gérer j'ai donc travailler en mode agile ou à chaque étape réaliser je voyais avec mon tuteur si celà lui correspondais car je n'avais
            pas beaucoup de temp et je ne pouvais pas perdre mon temp à tout refaire.
            Je parle dans cette étape de contenu et oui! J'ai du avant de développer jouer au photographe avec une Gopro 360° pour capturer les différentes salle.
            Voici d'ailleur ma plaquette d'image que j'ai utiliser dans ma visite (la vous avez seulement les images que j'ai utiliser sinon on en avait plus de 150 ;)</p>

            <img src="{{ asset('/assets/unityPhotoRobes.png') }}" width="800px" height="450px">
            <br>
            <p>Maintenant que les images sont faites j'ai pu commencer le développement. J'ai tout d'abord mis en place des sphères ou j'y ai mis leur texture (les images des salles).
            comme vous pouvez le visualiser ci-dessous.
            <img src="{{ asset('/assets/unityboule.png') }}" width="800px" height="450px">

            <p>Maintenant que nous avons toutes nos salle de faites j'aimerais pouvoir naviguer dans ma visite virtuelle! Pour celà j'ai opter pour un système asser simple
            tout d'abord une caméra qui sera nos yeux dans l'application et un système de pointeur à cliquer pour se déplacer dans les différentes salle et bien évidement un système
            pour pouvoir bouger notre caméra avec notre souris pour pouvoir voir les détails du lycée.

            J'ai donc créé un script pour les mouvements que j'ai nommé SC pour Scene Controller qui va être mis sur la caméra pour pouvoir faire suivre la caméra sur le pointeur
            de la souris.
            Voici le code est une explication brêve.</p>

            <ul>
            <li>Permet de contrôler la caméra à la première personne d'un objet de jeu Unity</li>
            <li>Permet de regarder autour de soi en déplaçant la souris</li>
            <li>Confinement du curseur de la souris à l'intérieur de la fenêtre de jeu pour éviter les mouvements indésirables</li>
            <li>Variables "rotationX" et "rotationY" pour contrôler l'orientation de la caméra en fonction des mouvements de la souris</li>
            <li>Variable "sensitivity" pour ajuster la vitesse de rotation de la caméra</li>
            <li>La fonction "isMouseOffScreen" vérifie si le curseur de la souris est en dehors de la fenêtre de jeu pour éviter que la caméra ne tourne de manière incontrôlable</li>
            </ul> 
    <pre><code class="language-csharp">
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class sc : MonoBehaviour
{
    public float rotationX;
    public float rotationY;
    public float sensitivity = 5f;
  
    void Start()
    {
        Cursor.lockState = CursorLockMode.Confined;
       
    }
    // Update is called once per frame
    void Update()
    {
        

        if (Input.GetKey(KeyCode.Space))
            Cursor.lockState = CursorLockMode.None;

        //Si notre souris n'est pas en dehors de la fenêtre unity alors
        if (!isMouseOffScreen ())
        {
            if (Input.GetMouseButton(0))
            {
                rotationX -= Input.GetAxis("Mouse Y") * sensitivity;
                rotationY += Input.GetAxis("Mouse X") * sensitivity;

                rotationX = Mathf.Clamp(rotationX, -90, 90);

                transform.rotation = Quaternion.Euler(rotationX, rotationY, 0);

            }

        }
 
    }

    private bool isMouseOffScreen()
    {
        if (Input.mousePosition.x <= 2 || Input.mousePosition.y <= 2 || Input.mousePosition.x >= Screen.width - 2 || Input.mousePosition.y >= Screen.height - 2)
            return true;
        return false;
    }
}

</code></pre>
<br>
<p> Maintenant que nous pouvons voir autour de nous, et les détails de nos salles.
Il faut à tout pris pouvoir se déplacer dans chaque salle.</p>

<p> Pour celà j'ai opter pour un système simple avoir des pointeurs à cliquer avec un nom qui apparait quand on passe la souris dessus 
pour voir le nom des salles.</p>
<img src="{{ asset('/assets/pointeur.png') }}" width="800px" height="650px">
</br></br>
<p>Pour se faire, chaque pointeur à un Box collider c'est ce qui va le rendre intéractif.
Ensuite chaque pointeur à le script Onclick:
<li>En résumé, ce code définit une classe qui permet de jouer une animation, de modifier le texte affiché et de téléporter la caméra du joueur à une position donnée lorsqu'un utilisateur clique sur un objet spécifique.
<p>Chaque pointeur à la coordonnée de la sphère correspondant.
<img src="{{ asset('/assets/pointeurClick.png') }}" width="800px" height="650px">
<p>Maintenant que nous avons une visite ou nous pouvons nous déplacez, regardez autour de nous.
Il nous manquez la lecture de vidéo dans certaine salle qui sont les fillières du lycée.
Pour ce faire j'ai utiliser des vidéos player qui ont l'url de la vidéo qu'ils doivent lancé.
maintenant il a fallu lancer tel ou tel vidéo celon dans quelle salle nous allions pour celà
plusieurs étape.
    <li>Chaque vidéo player à l'url de la vidéo qu'il doit lancé</li>
    <li>les Vidéos player sont dans des préfabs Canvas pour qu'ils soit tous identique avec un fond Rouge et un titre</li>
    <li>Les pointeurs qui amêne dans une salle ou il y a une vidéo on un script pour lancé la vidéo il permet de la lancer quand la propriété StartOrStop est cocher et 
    donc pour arrêter la vidéo sur les pointeurs ou l'on sort de la salle on met la propriété StartOrStop décocher. Ce qui permet de lancer ou stoper la vidéo.
    <pre><code class="language-csharp">
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.Video;


public class lauchVideo : MonoBehaviour
{

    public VideoPlayer videoConcerne;

    public bool StartOrStop;
    // Start is called before the first frame update
    void Start()
    {

    }

    // Update is called once per frame
    void Update()
    {

    }
    private void OnMouseDown()
    {
        if (StartOrStop)
        {
            startVideo();
        }
        else
        {
            stopVideo();
        }
    }
    
       
    public void startVideo()
    {
        videoConcerne.Play();
    }
    
    public void stopVideo()
    {
        videoConcerne.Stop();

    }

}
</code></pre>
</li>
<br><br>
<p>Ce qui nous donnes à la fin une très belle hiérarchie que j'ai au mieux trier.
<br><br>
<img src="{{ asset('/assets/hierarchyUnity.png') }}" width="400" height="850">
        </div>
    </div>
</div>



{% endblock %}
